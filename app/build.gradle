plugins {
    id "com.google.protobuf" version "0.8.12"
}
apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: "androidx.navigation.safeargs"
apply plugin: 'dagger.hilt.android.plugin'

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.2"

    defaultConfig {
        applicationId "me.index197511.mysongbank"
        minSdkVersion 26
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    buildFeatures {
        viewBinding = true
    }

    androidExtensions {
        experimental = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])

    implementation deps.kotlin.stdlib

    // androidx
    implementation deps.androidx.core
    implementation deps.androidx.appcompat
    implementation deps.androidx.constraintlayout
    implementation deps.androidx.legacy_support
    implementation deps.androidx.fragment
    implementation deps.androidx.lifecycle_extension
    implementation deps.androidx.lifecycle_viewmodel
    implementation deps.androidx.lifecycle_livedata

    // test
    testImplementation deps.test.androidx_test_runner
    testImplementation deps.test.androidx_test_rules
    testImplementation deps.test.androidx_test_core
    testImplementation deps.test.truth
    testImplementation deps.test.truth_ext
    testImplementation deps.test.espresso_core
    testImplementation deps.test.espresso_contrib

    // room
    kapt deps.room.compiler
    implementation deps.room.runtime
    implementation deps.room.ktx

    // dagger_hilt
    implementation deps.dagger_hilt.android
    implementation deps.dagger_hilt.common
    implementation deps.dagger_hilt.viewmodel
    kapt deps.dagger_hilt.compiler
    kapt deps.dagger_hilt.androidx_compiler
    kapt deps.dagger_hilt.android_compiler

    // coroutine
    implementation deps.coroutines.core

    // groupie
    // https://github.com/lisawray/groupie/issues/333
    //    implementation "com.xwray:groupie:2.8.0"
    //    implementation "com.xwray:groupie-viewbinding:2.8.0"
    //    implementation "com.xwray:groupie-kotlin-android-extensions:2.8.0"
    implementation deps.groupie.groupie
    implementation deps.groupie.viewbinding
    implementation deps.groupie.android_extension

    // navigation
    implementation deps.navigation.fragment_ktx
    implementation deps.navigation.ui_ktx

    // material-dialogs
    implementation deps.material_dialog.core
    implementation deps.material_dialog.input
    implementation deps.material_dialog.bottomsheets

    // floating_search_view
    implementation deps.floating_search_view.floating_search_view

    // proto Datastore
    implementation deps.proto_data_store.core
    implementation deps.proto_data_store.proto_buf

    // material
    implementation deps.material.material

    // mockK
    testImplementation deps.mockK.mockK

    // kotlinx-coroutines-test
    testImplementation deps.kotlinx_coroutines_test.kotlinx_coroutines_test

    implementation project(":data")
    implementation project(":model")
    implementation project(":feature:editsong")
    implementation project(":feature:songlist")
    implementation project(":router")
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:3.10.0"
    }
    generateProtoTasks {
        all().each { task ->
            task.builtins {
                java {
                    option 'lite'
                }
            }
        }
    }
}